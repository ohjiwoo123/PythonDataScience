# -*- coding: utf-8 -*-
"""보스턴집값3batch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12e4341qMyywXzJLgC_AvNHg9IlGXikJh

# **학습이 잘 되는 모델**


* 데이터 (github csv url) : 
 * 보스턴 집값 예측 : https://raw.githubusercontent.com/blackdew/tensorflow1/master/csv/boston.csv
 * 아이리스 품종 분류 : https://raw.githubusercontent.com/blackdew/tensorflow1/master/csv/iris.csv 


*   사용할 레이어
 * tf.keras.layers.BatchNormalization()
 * tf.keras.layers.Activation('swish')
"""

# 라이브러리 사용
import tensorflow as tf
import pandas as pd

# 1. 과거의 데이터를 준비합니다.
파일경로 = 'https://raw.githubusercontent.com/blackdew/tensorflow1/master/csv/boston.csv'
보스턴 = pd.read_csv(파일경로)
print(보스턴.columns)
보스턴.head()

# 독립변수, 종속변수
독립 = 보스턴[['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',
       'ptratio', 'b', 'lstat']]
종속 = 보스턴[['medv']]
print(독립.shape, 종속.shape)

# 모델의 구조를 만듭니다.
X = tf.keras.layers.Input(shape=[13])
H = tf.keras.layers.Dense(8)(X)
H = tf.keras.layers.BatchNormalization()(H)
H = tf.keras.layers.Activation('swish')(H)

H = tf.keras.layers.Dense(8)(H)
H = tf.keras.layers.BatchNormalization()(H)
H = tf.keras.layers.Activation('swish')(H)

H = tf.keras.layers.Dense(8)(H)
H = tf.keras.layers.BatchNormalization()(H)
H = tf.keras.layers.Activation('swish')(H)

Y = tf.keras.layers.Dense(1)(H)
model = tf.keras.models.Model(X,Y)
model.compile(loss='mse')

# 데이터로 모델을 학습(FIT)합니다.
model.fit(독립, 종속, epochs=1000, verbose= 0)
model.fit(독립, 종속, epochs=10)

# 모델을 요약합니다. (중간요약)
model.summary()

# 모델을 이용합니다.
model.predict(독립[0:5])

# 종속 변수 확인
종속[0:5]

# 모델의 수식 확인
model.get_weights()

